#!/bin/bash
# wrapper for request tracker interaction
# TODO - add the following
# add cc: rt edit $ticket set cc=$email
# add requestor: rt edit ticket/$ticket set requestors=$email
# check requestor: rt ls -l $ticket | grep Requestors | awk '{print $2}')
# open new ticket: rt create -t ticket set subject="$subject" requestors=$email queue=ops

# environment setup
rtconf=~/.rtconf
source $rtconf
# $rtconf file needs to set: rt=/rt/binary/path RTUSER=username RTSERVER=https://rt.server.fqdn RTPASSWD=password

# set rt password if not set already
if [ -z "$RTPASSWD" ]; then
	echo "Enter the password and press [ENTER]: "
	read -r -s password
	export RTPASSWD=$password
fi

# functions
usage() {
	echo ""
	echo "-r ticket // resolve ticket"
	echo "-d on // debug mode on - no changes made"
	echo "-s ticket // short ticket status"
	echo "-l ticket // long ticket status"
	echo "-u // usage (this message)"
	echo "-x ticket // delete ticket"
	echo "-m // merge tickets"
	echo "-i // personal RT productivity"
#	echo ""
}

status() {
	if [ -z "$debug" ]; then # debug var NOT null
		$rt ls -l $ticket_for_short_status 
	else
		echo "Debug on, $ticket_for_short_status would have had its short status checked otherwise"
	fi
	if [ -z "$debug" ]; then # debug var NOT null
		$rt show $ticket_for_long_status # does this need to be piped into less?
	else
		echo "Debug on, $ticket_for_long_status would have had its long status checked otherwise"
	fi
}

resolve() {
	if [ -z "$debug" ]; then # debug var NOT null
		$rt edit ticket/$ticket_to_resolve set status='resolved'
		if [ "$?" == "0" ]; then
			echo "$ticket_to_resolve resolved"
		else
			echo "$ticket_to_resolve possibly NOT resolved? non zero exit status"
		fi
	else
		echo "Debug on, $ticket_to_resolve would have been resolved otherwise"
		echo "here is it's short status"
		status $ticket_to_resolve
	fi
}

delete() {
	if [ -z "$debug" ]; then # debug var NOT null
		$rt edit ticket/$ticket_to_delete set status='deleted'
		if [ "$?" == "0" ]; then
			echo "$ticket_to_delete deleted"
		else
			echo "$ticket_to_delete possibly NOT deleted? non zero exit status"
		fi
	else
		echo "Debug on, $ticket_to_delete would have been deleted otherwise"
	fi
}

info() {
	# first, set the number of days we want to report for
	if [ -z "$2" ]; then
		# default to 7 if not specified
		period=7
	else
		period=$2
	fi
	echo "period = $period"
	echo "** Tickets resolved in last $period days **"
	$rt ls -o +Subject "owner=$RTUSER and status=resolved and Resolved>'$period days ago'"
	echo ""
	echo "** Tickets interacted with in last $period days **"
	$rt ls -o +Subject "UpdatedBy=$RTUSER and Updated>'$period days ago'" 
}

merge() {
	echo "please enter the ticket number for the ticket to be merged INTO"
	read -r -p "i.e. the other ticket(s) will be merged into this ticket: " master

	# workflow
	declare -a tickets=()
	while IFS= read -r -p "Ticket(s), (1 per line), to be merged into $master, (end with an empty line): " line; do
		[[ $line ]] || break  # break if line is empty
		tickets+=("$line")
	done

	for ticket in "${tickets[@]}"; do
		    echo "merging $ticket into $master"
		    $rt merge $ticket $master
	done
}

# read the flags & perform actions
while getopts “r:d:s:l:x:imu:” OPTION
do
	 case $OPTION in
		 r)
			 ticket_to_resolve=$OPTARG
			resolve $ticket_to_resolve
			 ;;
		 d)
			 debug=$OPTARG
			 ;;
		 s)
			 ticket_for_short_status=$OPTARG
			status $ticket_for_short_status
			 ;;
		 l)
			 ticket_for_long_status=$OPTARG
			status $ticket_for_long_status
			 ;;
		 x)
			 ticket_to_delete=$OPTARG
			delete $ticket_to_delete
		     ;;
		 i)
			 info
			 ;;
		 m)
			 merge
			 ;;
		 u)
			 usage
			 exit
			 ;;
		 ?)
			 usage
			 exit
			 ;;
	 esac
done

exit 0
